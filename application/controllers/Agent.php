<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Agent extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Agent_model');
    } 

    /*
     * Listing of agents
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('agent/index?');
        $config['total_rows'] = $this->Agent_model->get_all_agents_count();
        $this->pagination->initialize($config);

        $data['agents'] = $this->Agent_model->get_all_agents($params);
        
        $data['_view'] = 'agent/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new agent
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('Matricule','Matricule','required|is_unique[tb_am_agents.matricule]');
		$this->form_validation->set_rules('Ville','Ville','required');
		$this->form_validation->set_rules('DateNaissance','DateNaissance','required');
		$this->form_validation->set_rules('LieuNaissance','LieuNaissance','required');
		$this->form_validation->set_rules('Grade','Grade','required');
		$this->form_validation->set_rules('Fonction','Fonction','required');
		$this->form_validation->set_rules('Email','Email','valid_email|is_unique[tb_am_agents.email]');
		$this->form_validation->set_rules('Telephone','Telephone','is_unique[tb_am_agents.telephone]');
		$this->form_validation->set_rules('NomAg','NomAg','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'Ville' => $this->input->post('Ville'),
				'NomAg' => $this->input->post('NomAg'),
				'Province' => $this->input->post('Province'),
				'Districte' => $this->input->post('Districte'),
				'Territoire' => $this->input->post('Territoire'),
				'Telephone' => $this->input->post('Telephone'),
				'Email' => $this->input->post('Email'),
				'Fonction' => $this->input->post('Fonction'),
				'Adresse' => $this->input->post('Adresse'),
				'Grade' => $this->input->post('Grade'),
				'DateAjout' => date('Y-m-d H:i:s'),
				'LieuNaissance' => $this->input->post('LieuNaissance'),
				'DateNaissance' => $this->input->post('DateNaissance'),
				'Matricule' => $this->input->post('Matricule'),
            );
            
            $agent_id = $this->Agent_model->add_agent($params);
            redirect('agent/index');
        }
        else
        {            
            $data['_view'] = 'agent/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a agent
     */
    function edit($Agent_id)
    {   
        // check if the agent exists before trying to edit it
        $data['agent'] = $this->Agent_model->get_agent($Agent_id);
        
        if(isset($data['agent']['Agent_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('Matricule','Matricule','required|is_unique[matricule]');
			$this->form_validation->set_rules('Ville','Ville','required');
			$this->form_validation->set_rules('DateNaissance','DateNaissance','required');
			$this->form_validation->set_rules('LieuNaissance','LieuNaissance','required');
			$this->form_validation->set_rules('Grade','Grade','required');
			$this->form_validation->set_rules('Fonction','Fonction','required');
			$this->form_validation->set_rules('Email','Email','valid_email|is_unique[email]');
			$this->form_validation->set_rules('Telephone','Telephone','is_unique[telephone]');
			$this->form_validation->set_rules('NomAg','NomAg','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'Ville' => $this->input->post('Ville'),
					'NomAg' => $this->input->post('NomAg'),
					'Province' => $this->input->post('Province'),
					'Districte' => $this->input->post('Districte'),
					'Territoire' => $this->input->post('Territoire'),
					'Telephone' => $this->input->post('Telephone'),
					'Email' => $this->input->post('Email'),
					'Fonction' => $this->input->post('Fonction'),
					'Adresse' => $this->input->post('Adresse'),
                    'DateAjout' => $this->input->post('DateAjout'),
					'LieuNaissance' => $this->input->post('LieuNaissance'),
					'DateNaissance' => $this->input->post('DateNaissance'),
					'Matricule' => $this->input->post('Matricule'),
                );

                $this->Agent_model->update_agent($Agent_id,$params);            
                redirect('agent/index');
            }
            else
            {
                $data['_view'] = 'agent/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The agent you are trying to edit does not exist.');
    } 

    /*
     * Deleting agent
     */
    function remove($Agent_id)
    {
        $agent = $this->Agent_model->get_agent($Agent_id);

        // check if the agent exists before trying to delete it
        if(isset($agent['Agent_id']))
        {
            $this->Agent_model->delete_agent($Agent_id);
            redirect('agent/index');
        }
        else
            show_error('The agent you are trying to delete does not exist.');
    }
    
}
